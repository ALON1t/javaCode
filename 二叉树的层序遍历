/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<List<Integer>>();
        Deque<TreeNode> queue = new ArrayDeque<>();
        if(root == null) {
            return list;
        } else {
            queue.offer(root);
        }
        while(!queue.isEmpty()) {
            int n = queue.size();
            List<Integer> list1 = new ArrayList<>();
            for(int i = 0; i < n;i++) {
                TreeNode node = queue.poll();
                list1.add(node.val);
                if(node.left != null) {
                    queue.offer(node.left);
                    
                }
                if(node.right != null) {
                    queue.offer(node.right);
                
                }
            }
            list.add(list1);
        }
        return list; 
    }
}
